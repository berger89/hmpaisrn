import 'dart:async';

import 'package:flutter/material.dart';
import 'package:hmpaisrn/data/autogenerated.dart';
import 'package:hmpaisrn/data/launch.dart';
import 'package:hmpaisrn/rocket_icons.dart';
import 'package:hmpaisrn/screens/home/widgets/text_number/index.dart';
import 'package:hmpaisrn/screens/info/index.dart';
import 'package:hmpaisrn/screens/list/list.dart';
import 'package:hmpaisrn/screens/rocket/previous/previous.dart';
import 'package:hmpaisrn/screens/rocket/upcoming/upcoming.dart';
import 'package:hmpaisrn/screens/rocket/search/search.dart';
import 'widgets/background/index.dart';
import 'package:hmpaisrn/services/launchlib.dart';

class Home extends StatelessWidget {
  final Future<Autogenerated> autogenerated;

  Home({Key key, this.autogenerated}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return new MaterialApp(
      title: 'How Many People Are In Space Right Now?',
      theme: ThemeData.dark(),
      home: FutureBuilder<Autogenerated>(
        future: autogenerated,
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            return new PeopleNumberPage(
              title: 'How Many People In Space',
              autogeneratedNumber: snapshot.data,
              offline: false,
            );
          } else if (snapshot.hasError) {
            return new PeopleNumberPage(
              title: 'How Many People In Space',
              autogeneratedNumber:
                  new Autogenerated(number: 0, people: List(0)),
              offline: true,
            );
          }
          return new Container();
        },
      ),
    );
  }
}

class PeopleNumberPage extends StatefulWidget {
  final Autogenerated autogeneratedNumber;
  final String title;
  final bool offline;

  PeopleNumberPage(
      {Key key, this.autogeneratedNumber, this.title, this.offline})
      : super(key: key);

  @override
  _PeopleNumberPageState createState() =>
      new _PeopleNumberPageState(autogeneratedNumber, offline);
}

class _PeopleNumberPageState extends State<PeopleNumberPage> {
  final Autogenerated autogeneratedNumber;
  final bool offline;
  int _selectedIndex = 0;

  _PeopleNumberPageState(this.autogeneratedNumber, this.offline) : super();

  @override
  Widget build(BuildContext context) {
    final List<Widget> _children = [
      Stack(
        children: <Widget>[
          new Background(),
          new TextNumber(
              autogeneratedNumber: this.autogeneratedNumber.number,
              people: this.autogeneratedNumber.people,
              fontSize: 188.0,
              fontColor: Colors.white.withOpacity(0.8),
              offline: false),
        ],
      ),
      FutureBuilder(
          future: fetchNextLaunches(),
          builder: (context, snapshot) {
            if (snapshot.hasData && snapshot.data is Launch) {
              return new UpcomingListScreen(
                launch: snapshot.data,
              );
            } else {
              // TODO show loading dialog
              return new UpcomingListScreen(
                launch: new Launch(count: 0,launches: new List(0)),
              );
            }
          }),
      FutureBuilder(
          future: fetchPreviousLaunches(),
          builder: (context, snapshot) {
            if (snapshot.hasData && snapshot.data is Launch) {
              return new PreviousListScreen(
                launch: snapshot.data,
              );
            } else {
              // TODO show loading dialog
              return new PreviousListScreen(
                launch: new Launch(count: 0,launches: new List(0)),
              );
            }
          }),
      FutureBuilder(
          future: fetchNextLaunches(next: 1, offset: 0),
          builder: (context, snapshot) {
            // TODO show loading dialog
            return new SearchListScreen(
              launch: new Launch(count: 0,launches: new List(0)),
            );
          }),
      InfoScreen()
    ];

    // TODO offline handling...
    return new Scaffold(
      appBar: new AppBar(
        title: new Text(widget.title),
      ),
      body: _children[_selectedIndex],
      bottomNavigationBar: BottomNavigationBar(
        items: <BottomNavigationBarItem>[
          BottomNavigationBarItem(
              icon: Icon(Icons.people_outline), title: Text('People')),
          BottomNavigationBarItem(
              icon: Icon(Rocket.rocket), title: Text('Upcoming')),
          BottomNavigationBarItem(
              icon: Icon(Icons.update), title: Text('Previous')),
          BottomNavigationBarItem(
              icon: Icon(Icons.search), title: Text('Search')),
          BottomNavigationBarItem(
              icon: Icon(Icons.info_outline), title: Text('Info')),
        ],
        currentIndex: _selectedIndex,
        fixedColor: Colors.white,
        onTap: _onItemTapped,
      ),
    );
  }

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }
}
